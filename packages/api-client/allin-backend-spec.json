{
  "openapi": "3.0.3",
  "info": {
    "title": "allin-api",
    "description": "",
    "license": { "name": "" },
    "version": "0.1.0"
  },
  "paths": {
    "/auth/create": {
      "post": {
        "tags": ["auth"],
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "operationId": "login_with_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TokenResponse" }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/auth/update": {
      "put": {
        "tags": ["auth"],
        "operationId": "update_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/bookmark/create": {
      "post": {
        "tags": ["bookmark"],
        "operationId": "create_bookmark",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBookmarkBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Bookmarked",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookmarkStatus" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Message not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/bookmark/delete": {
      "delete": {
        "tags": ["bookmark"],
        "operationId": "delete_bookmark",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBookmarkBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Unbookmarked",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookmarkStatus" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/bookmark/list": {
      "get": {
        "tags": ["bookmark"],
        "operationId": "list_bookmarked_messages",
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "description": "Filter by channel id",
            "required": false,
            "schema": { "type": "string", "nullable": true }
          }
        ],
        "responses": {
          "200": {
            "description": "List bookmarks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/channel/create": {
      "post": {
        "tags": ["channel"],
        "operationId": "create_channel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Channel created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/channel/list/{account_id}": {
      "get": {
        "tags": ["channel"],
        "operationId": "list_my_channels",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "List my channels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Model" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/channel/update/{id}": {
      "put": {
        "tags": ["channel"],
        "operationId": "update_channel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Channel id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Channel updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Health OK",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/health/auth": {
      "get": {
        "tags": ["health"],
        "operationId": "health_auth",
        "responses": {
          "200": {
            "description": "Authenticated health",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HealthAuthResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/message/create": {
      "post": {
        "tags": ["message"],
        "operationId": "create_message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Model" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/message/list/{channel_id}": {
      "get": {
        "tags": ["message"],
        "operationId": "list_messages",
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "description": "Channel id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages in channel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Model" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BookmarkStatus": {
        "type": "object",
        "required": ["bookmark"],
        "properties": { "bookmark": { "type": "boolean" } }
      },
      "ChatRole": { "type": "string", "enum": ["User", "Assistant", "System"] },
      "CreateBookmarkBody": {
        "type": "object",
        "required": ["message_id"],
        "properties": { "message_id": { "type": "string" } }
      },
      "CreateChannelInput": {
        "type": "object",
        "required": ["account_id"],
        "properties": {
          "account_id": { "type": "integer", "format": "int64" },
          "ai_model": { "type": "string", "nullable": true },
          "channel_img_url": { "type": "string", "nullable": true },
          "name": { "type": "string", "nullable": true },
          "script": { "type": "string", "nullable": true }
        }
      },
      "CreateMessageInput": {
        "type": "object",
        "required": ["channel_id", "role", "content"],
        "properties": {
          "ai_model": { "type": "string", "nullable": true },
          "channel_id": { "type": "string" },
          "content": { "type": "string" },
          "role": { "$ref": "#/components/schemas/ChatRole" }
        }
      },
      "CreateUserInput": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": { "type": "string" },
          "name": { "type": "string", "nullable": true },
          "profile_img_url": { "type": "string", "nullable": true }
        }
      },
      "HealthAuthResponse": {
        "type": "object",
        "required": ["ok"],
        "properties": {
          "ok": { "type": "boolean" },
          "sub": { "type": "integer", "nullable": true, "minimum": 0 }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email"],
        "properties": { "email": { "type": "string" } }
      },
      "Model": {
        "type": "object",
        "required": ["id", "message_id", "account_id", "created_at"],
        "properties": {
          "account_id": { "type": "integer", "format": "int64" },
          "created_at": { "type": "string", "format": "date-time" },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": { "type": "string" },
          "message_id": { "type": "string" },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "required": ["token"],
        "properties": { "token": { "type": "string" } }
      },
      "UpdateChannelInput": {
        "type": "object",
        "properties": {
          "ai_model": { "type": "string", "nullable": true },
          "channel_img_url": { "type": "string", "nullable": true },
          "name": { "type": "string", "nullable": true },
          "script": { "type": "string", "nullable": true }
        }
      },
      "UpdateUserInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "nullable": true },
          "profile_img_url": { "type": "string", "nullable": true }
        }
      }
    }
  },
  "tags": [
    { "name": "auth", "description": "Authentication endpoints" },
    { "name": "channel", "description": "Channel endpoints" },
    { "name": "message", "description": "Message endpoints" },
    { "name": "bookmark", "description": "Bookmark endpoints" },
    { "name": "health", "description": "Health check endpoints" }
  ]
}
