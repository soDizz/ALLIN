export const MockMessage = [
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
  {
    role: 'user',
    content: 'What is Rust?',
  },
  {
    role: 'assistant',
    content: `Rust는 안전하고 빠른 시스템 프로그래밍 언어입니다. 모질라(Mozilla)에서 개발했으며, 주로 성능이 중요한 시스템 소프트웨어, 임베디드 시스템, 게임 개발, 웹 어셈블리 등 다양한 분야에서 사용됩니다. Rust의 주요 특징은 다음과 같습니다:

메모리 안전성: Rust는 컴파일 시점에 메모리 관련 버그(예: 널 포인터, 버퍼 오버플로우)를 방지하는 안전한 메모리 모델을 제공합니다.
성능: C와 C++에 필적하는 빠른 성능을 자랑하며, 낮은 수준의 하드웨어 제어도 가능합니다.
병행성: 안전한 병행성(멀티스레딩)을 지원하여, 경쟁 조건이나 데드락 없이 병렬 처리를 쉽게 구현할 수 있습니다.
모던한 문법: 현대적인 문법과 강력한 타입 시스템을 갖추고 있어, 개발자가 안정적이고 유지보수하기 쉬운 코드를 작성할 수 있습니다.
Rust는 특히 시스템 수준의 프로그래밍에서 안전성과 성능을 동시에 추구하는 개발자들에게 인기가 많습니다. 더 궁금한 점이 있나요?`,
  },
];
