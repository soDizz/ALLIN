@layer agent;

/* 좌상단 작은 빛  */
@property --light-right {
  syntax: "<color>";
  initial-value: rgb(0, 187, 255);
  inherits: true;
}

@property --light-bottom-right {
  syntax: "<color>";
  initial-value: rgb(0, 240, 255);
  inherits: true;
}

@property --muck {
  syntax: "<color>";
  initial-value: rgba(0, 49, 255, 0.25);
  inherits: true;
}

@property --globe-shadow {
  syntax: "<color>";
  initial-value: rgb(0, 38, 204);
  inherits: true;
}

@property --bottom-light {
  syntax: "<color>";
  initial-value: rgb(226, 255, 255);
  inherits: true;
}

@property --light-tone {
  syntax: "<color>";
  initial-value: rgb(0, 221, 255);
  inherits: true;
}

@property --base-color {
  syntax: "<color>";
  initial-value: rgb(0, 49, 255);
  inherits: true;
}

@property --base-sub-darker {
  syntax: "<color>";
  initial-value: rgba(0, 121, 255, 0.5);
  inherits: true;
}

@property --base-sub-lighter {
  syntax: "<color>";
  initial-value: rgb(164, 240, 255);
  inherits: true;
}

@property --circle-x-2 {
  syntax: "<percentage>";
  initial-value: 33%;
  inherits: true;
}

@property --circle-x-3 {
  syntax: "<percentage>";
  initial-value: 31%;
  inherits: true;
}

@property --border-w-3 {
  syntax: "<length>";
  initial-value: 6px;
  inherits: true;
}

@layer agent {
  .container {
    --agent-length: 82px;

    &[data-theme="orange"] {
      --globe-shadow: #f5934e;
      --light-tone: #ffe9d0;
      --muck: hsla(29, 93%, 48%, 0.25);
      --bottom-light: #ebf2bc;
      --light-right: #f5934e;
      --light-bottom-right: #d57216;
      --base-color: #e08104;
      --base-sub-darker: rgba(221, 138, 6, 0.5);
      --base-sub-lighter: rgb(233, 161, 37);
    }

    cursor: pointer;
    position: relative;
    overflow: hidden;
    height: var(--agent-length, 82px);
    width: var(--agent-length, 82px);
    border-radius: 50%;
    background-image: radial-gradient(
      circle at 50% 35%,
      var(--light-bottom-right) 0%,
      var(--base-color) 70%
    );

    box-shadow:
      transparent 0 calc(var(--agent-length) * 0.049)
      calc(var(--agent-length) * 0.073) 0,
      var(--base-sub-darker) 0 calc(var(--agent-length) * 0.061)
      calc(var(--agent-length) * 0.122) 0,
      rgba(255, 255, 255, 0.9) 0 0 calc(var(--agent-length) * 0.012) 0 inset,
      var(--base-sub-lighter) 0 calc(var(--agent-length) * 0.012)
      calc(var(--agent-length) * 0.085) 0 inset;
    transform: none;
  }

  .one {
    border-radius: 50%;
    position: absolute;
    top: 0px;
    left: 0px;
    height: 100%;
    width: 100%;
    background-image: radial-gradient(
      circle at 50% 90%,
      var(--bottom-light) 0%,
      transparent 70%
    );
  }

  .two {
    border-radius: 50%;
    position: absolute;
    top: 5px;
    left: 5px;
    height: calc(100% - 8px);
    width: calc(100% - 8px);
    background: radial-gradient(
      circle at var(--circle-x-2) 4%,
      rgb(255, 243, 240) 0%,
      var(--light-tone) 26%,
      transparent 63%
    );
    filter: blur(2px);
    will-change: transform;
    transform: translateY(4.66528px) scale(1.06653) rotate(-19.9583deg);
    /* css 변수의 초기값 33%와 다르게 초기값이 세팅되었을때 발생하는 shift를 완화하기 위해 추가 */
    transition: --circle-x-2 0.5s ease-in-out;
    animation: riverflow 12s ease-in-out infinite alternate;
  }

  @keyframes riverflow {
    0% {
      transform: translateY(4px) scale(1) rotate(0deg);
    }
    15% {
      transform: translateY(6px) scale(1.15) rotate(-45deg);
    }
    30% {
      transform: translateY(4px) scale(1) rotate(0deg);
    }
    60% {
      transform: translateY(8px) scale(1) rotate(45deg);
    }
    100% {
      transform: translateY(4px) scale(1.15) rotate(0deg);
    }
  }

  .three {
    position: absolute;
    top: 5px;
    left: 5px;
    height: calc(100% - var(--border-w-3));
    width: calc(100% - var(--border-w-3));
    border-radius: 50%;
    background-image: radial-gradient(
      circle at var(--circle-x-3) 12%,
      transparent 31%,
      var(--globe-shadow) 77%
    );
    filter: blur(1px);
    opacity: 0.65;
    transition:
      --circle-x-3 0.5s ease-in-out,
      --border-w-3 0.5s ease-in-out;
  }

  .seven {
    position: absolute;
    background: var(--muck);
    top: 0px;
    left: 0px;
    height: 50%;
    width: 50%;
    /* 원래 blur 4px 이였는데, 확대하면 문신이 너무 잘보여서 10px 로 수정 */
    /* 근데 10px 이면 또 문신이 너무 안보여서 5px 로 수정  */
    filter: url("#dissolve-filter2") blur(4px);
    will-change: transform;
    transform: rotate(0deg);
    animation: rotate-svg-filter 10s ease-in-out infinite alternate-reverse;
    /* animation-direction: var(--wave-direction, 'normal'); */
  }

  @keyframes rotate-svg-filter {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .eight {
    --border-w-8: calc(var(--border-w-3) / 2);
    opacity: 0.16;
    border-radius: 50%;
    position: absolute;
    top: var(--border-w-8);
    left: var(--border-w-8);
    height: calc(100% - var(--border-w-8) * 2);
    width: calc(100% - var(--border-w-8) * 2);
    background: linear-gradient(
      rgb(255, 255, 255) 0%,
      rgba(255, 255, 255, 0) 100%
    );
  }

  .nine {
    position: absolute;
    top: calc(var(--agent-length) * 0.13);
    left: calc(var(--agent-length) * 0.4);
    height: calc(var(--agent-length) * 0.3);
    width: calc(var(--agent-length) * 0.5);
    transform: rotate(27deg);
    background: linear-gradient(
      rgb(255, 255, 255) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    border-radius: 10px;
    /* 원래 4px, 확대하면 너무 사각형으로 보여서 8px 로 수정 */
    /* 마찬가지로 구가 작을때는 그냥 5px이 낫네. */
    filter: blur(5px);

    &[data-light-direction="right"] {
      left: unset;
      right: calc(var(--agent-length) * 0.4);
      transform: rotate(-27deg);
    }
  }

  .ten {
    position: absolute;
    top: calc(var(--agent-length) * 0.58);
    left: calc(var(--agent-length) * 0.5);
    height: calc(var(--agent-length) * 0.3);
    width: calc(var(--agent-length) * 0.6);
    transform: rotate(-142deg);
    background-image: linear-gradient(
      var(--light-bottom-right) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    border-radius: calc(var(--agent-length) * 0.1);
    filter: blur(6px);
    opacity: 0.7;

    &[data-light-direction="right"] {
      left: unset;
      right: calc(var(--agent-length) * 0.5);
      transform: rotate(142deg);
    }
  }

  /* 우상단 빛 영역 */
  .eleven {
    position: absolute;
    top: calc(var(--agent-length) * 0.29);
    left: calc(var(--agent-length) * 0.66);
    height: calc(var(--agent-length) * 0.15);
    width: calc(var(--agent-length) * 0.29);
    opacity: 0.8;
    transform: rotate(80deg);
    background-image: linear-gradient(
      var(--light-right) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    border-radius: calc(var(--agent-length) * 0.12);
    filter: blur(6px);

    &[data-light-direction="right"] {
      left: unset;
      right: calc(var(--agent-length) * 0.66);
      transform: rotate(-80deg);
    }
  }

  .twelve {
    position: absolute;
    top: 0px;
    left: 0px;
    height: 100%;
    width: 100%;
    /* 이 값을 올릴수록 살짝 더 신비로운 느낌이 나는 것 같음. 내리면 선명한 느낌  */
    opacity: 0.5;
    border-radius: 50%;
    background: transparent;
    box-shadow:
      rgba(255, 255, 255, 0.5) 0px -1px 6px 1px inset,
      rgba(255, 255, 255, 0.5) 0px 3px 4px 0px inset;
  }

  .thirteen {
    opacity: 0.32;
    position: absolute;
    top: calc(var(--agent-length) * 0.1);
    left: calc(var(--agent-length) * 0.13);
    height: calc(var(--agent-length) * 0.5);
    width: calc(var(--agent-length) * 0.6);
    transform: rotate(-20deg);
    background: linear-gradient(
      rgb(255, 255, 255) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    border-radius: calc(var(--agent-length) * 0.27);
    /* 원래 2px이였는데, 확대하면 경계가 살짝 어색해서 4px로 수정 */
    filter: blur(3px);

    &[data-light-direction="right"] {
      left: unset;
      right: calc(var(--agent-length) * 0.13);
      transform: rotate(20deg);
    }
  }
}
